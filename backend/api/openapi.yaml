#
# CSE183 Assignment 8 Backend
#

openapi: '3.0.3'

info:
  description: CSE183 Assignment 8 Backend
  version: 0.1.0
  title: CSE183 Assignment 8 Backend

servers:
  - url: http://localhost:3010/v0

paths:
  /authenticate:
    post:
      description: test
      requestBody:
        description: test2
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                pass:
                  type: string
      responses:
        200:
          description: Application response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        401:
          description: Failed authentication
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /dummy:
    get:
      description: Dummy Endpoint
      responses:
        200:
          description: Succesful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DummyResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users:
    get:
      description: Getting Users
      parameters:
      - name: username
        in: query
        description: User to Get
        schema:
          type: string
      responses:
        200:
          description: Received Users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        404:
          description: User Not Found
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
  /workspace:
    get:
      description: Getting Workspace
      parameters:
      - name: workspace
        in: query
        description: Workspace to Get
        schema:
          type: string
      responses:
        200:
          description: Received Workspaces
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceResponse'
        404:
          description: Workspaces Not Found
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string

    DummyResponse:
      required:
        - message
      properties:
        message:
          type: string
    
    UserResponse:
      type: array
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/User'
          
    User:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
          format: email
        pass:
          type: string
        workspace:
          type: string
        status:
          type: string
      
    WorkspaceResponse:
      type: array
      properties:
        workspaces:
          type: array
          items:
            $ref: '#/components/schemas/Workspace'

    Workspace:
      type: object
      properties:
        name:
          type: string
        users:
          type: array
